{"version":3,"sources":["webpack:///./node_modules/corporate-ui/dist/esm-es5/popper-3af5edbd.js"],"names":["isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","arguments","undefined","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_extends","assign","source","hasOwnProperty","getClientRect","offsets","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","findIndex","prop","cur","match","runModifiers","modifiers","data","ends","modifiersToRun","slice","forEach","console","warn","enabled","update","this","isDestroyed","arrowStyles","attributes","flipped","options","positionFixed","flip","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","_data$offsets","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","sameWidthParity","bothOddWidth","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Defaults","Popper","_this","requestAnimationFrame","bind","jquery","Utils","global","PopperUtils"],"mappings":"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","file":"js/chunk-2d0c7c83.2dec597b.js","sourcesContent":["/**!\r\n * @fileOverview Kickass library to create and place poppers near their reference elements.\r\n * @version 1.15.0\r\n * @license\r\n * Copyright (c) 2016 Federico Zivolo and contributors\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\r\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\r\nvar timeoutDuration = 0;\r\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\r\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\r\n        timeoutDuration = 1;\r\n        break;\r\n    }\r\n}\r\nfunction microtaskDebounce(fn) {\r\n    var called = false;\r\n    return function () {\r\n        if (called) {\r\n            return;\r\n        }\r\n        called = true;\r\n        window.Promise.resolve().then(function () {\r\n            called = false;\r\n            fn();\r\n        });\r\n    };\r\n}\r\nfunction taskDebounce(fn) {\r\n    var scheduled = false;\r\n    return function () {\r\n        if (!scheduled) {\r\n            scheduled = true;\r\n            setTimeout(function () {\r\n                scheduled = false;\r\n                fn();\r\n            }, timeoutDuration);\r\n        }\r\n    };\r\n}\r\nvar supportsMicroTasks = isBrowser && window.Promise;\r\n/**\r\n* Create a debounced version of a method, that's asynchronously deferred\r\n* but called in the minimum time possible.\r\n*\r\n* @method\r\n* @memberof Popper.Utils\r\n* @argument {Function} fn\r\n* @returns {Function}\r\n*/\r\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\r\n/**\r\n * Check if the given variable is a function\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Any} functionToCheck - variable to check\r\n * @returns {Boolean} answer to: is a function?\r\n */\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\r\n}\r\n/**\r\n * Get CSS computed property of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Eement} element\r\n * @argument {String} property\r\n */\r\nfunction getStyleComputedProperty(element, property) {\r\n    if (element.nodeType !== 1) {\r\n        return [];\r\n    }\r\n    // NOTE: 1 DOM access here\r\n    var window = element.ownerDocument.defaultView;\r\n    var css = window.getComputedStyle(element, null);\r\n    return property ? css[property] : css;\r\n}\r\n/**\r\n * Returns the parentNode or the host of the element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} parent\r\n */\r\nfunction getParentNode(element) {\r\n    if (element.nodeName === 'HTML') {\r\n        return element;\r\n    }\r\n    return element.parentNode || element.host;\r\n}\r\n/**\r\n * Returns the scrolling parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} scroll parent\r\n */\r\nfunction getScrollParent(element) {\r\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\r\n    if (!element) {\r\n        return document.body;\r\n    }\r\n    switch (element.nodeName) {\r\n        case 'HTML':\r\n        case 'BODY':\r\n            return element.ownerDocument.body;\r\n        case '#document':\r\n            return element.body;\r\n    }\r\n    // Firefox want us to check `-x` and `-y` variations as well\r\n    var _getStyleComputedProp = getStyleComputedProperty(element), overflow = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY;\r\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\r\n        return element;\r\n    }\r\n    return getScrollParent(getParentNode(element));\r\n}\r\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\r\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\r\n/**\r\n * Determines if the browser is Internet Explorer\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Number} version to check\r\n * @returns {Boolean} isIE\r\n */\r\nfunction isIE(version) {\r\n    if (version === 11) {\r\n        return isIE11;\r\n    }\r\n    if (version === 10) {\r\n        return isIE10;\r\n    }\r\n    return isIE11 || isIE10;\r\n}\r\n/**\r\n * Returns the offset parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} offset parent\r\n */\r\nfunction getOffsetParent(element) {\r\n    if (!element) {\r\n        return document.documentElement;\r\n    }\r\n    var noOffsetParent = isIE(10) ? document.body : null;\r\n    // NOTE: 1 DOM access here\r\n    var offsetParent = element.offsetParent || null;\r\n    // Skip hidden elements which don't have an offsetParent\r\n    while (offsetParent === noOffsetParent && element.nextElementSibling) {\r\n        offsetParent = (element = element.nextElementSibling).offsetParent;\r\n    }\r\n    var nodeName = offsetParent && offsetParent.nodeName;\r\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\r\n        return element ? element.ownerDocument.documentElement : document.documentElement;\r\n    }\r\n    // .offsetParent will return the closest TH, TD or TABLE in case\r\n    // no offsetParent is present, I hate this job...\r\n    if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\r\n        return getOffsetParent(offsetParent);\r\n    }\r\n    return offsetParent;\r\n}\r\nfunction isOffsetContainer(element) {\r\n    var nodeName = element.nodeName;\r\n    if (nodeName === 'BODY') {\r\n        return false;\r\n    }\r\n    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\r\n}\r\n/**\r\n * Finds the root node (document, shadowDOM root) of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} node\r\n * @returns {Element} root node\r\n */\r\nfunction getRoot(node) {\r\n    if (node.parentNode !== null) {\r\n        return getRoot(node.parentNode);\r\n    }\r\n    return node;\r\n}\r\n/**\r\n * Finds the offset parent common to the two provided nodes\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element1\r\n * @argument {Element} element2\r\n * @returns {Element} common offset parent\r\n */\r\nfunction findCommonOffsetParent(element1, element2) {\r\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\r\n        return document.documentElement;\r\n    }\r\n    // Here we make sure to give as \"start\" the element that comes first in the DOM\r\n    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\r\n    var start = order ? element1 : element2;\r\n    var end = order ? element2 : element1;\r\n    // Get common ancestor container\r\n    var range = document.createRange();\r\n    range.setStart(start, 0);\r\n    range.setEnd(end, 0);\r\n    var commonAncestorContainer = range.commonAncestorContainer;\r\n    // Both nodes are inside #document\r\n    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\r\n        if (isOffsetContainer(commonAncestorContainer)) {\r\n            return commonAncestorContainer;\r\n        }\r\n        return getOffsetParent(commonAncestorContainer);\r\n    }\r\n    // one of the nodes is inside shadowDOM, find which one\r\n    var element1root = getRoot(element1);\r\n    if (element1root.host) {\r\n        return findCommonOffsetParent(element1root.host, element2);\r\n    }\r\n    else {\r\n        return findCommonOffsetParent(element1, getRoot(element2).host);\r\n    }\r\n}\r\n/**\r\n * Gets the scroll value of the given element in the given side (top and left)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {String} side `top` or `left`\r\n * @returns {number} amount of scrolled pixels\r\n */\r\nfunction getScroll(element) {\r\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\r\n    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\r\n    var nodeName = element.nodeName;\r\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\r\n        var html = element.ownerDocument.documentElement;\r\n        var scrollingElement = element.ownerDocument.scrollingElement || html;\r\n        return scrollingElement[upperSide];\r\n    }\r\n    return element[upperSide];\r\n}\r\n/*\r\n * Sum or subtract the element scroll values (left and top) from a given rect object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} rect - Rect object you want to change\r\n * @param {HTMLElement} element - The element from the function reads the scroll values\r\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\r\n * @return {Object} rect - The modifier rect object\r\n */\r\nfunction includeScroll(rect, element) {\r\n    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n    var scrollTop = getScroll(element, 'top');\r\n    var scrollLeft = getScroll(element, 'left');\r\n    var modifier = subtract ? -1 : 1;\r\n    rect.top += scrollTop * modifier;\r\n    rect.bottom += scrollTop * modifier;\r\n    rect.left += scrollLeft * modifier;\r\n    rect.right += scrollLeft * modifier;\r\n    return rect;\r\n}\r\n/*\r\n * Helper to detect borders of a given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {CSSStyleDeclaration} styles\r\n * Result of `getStyleComputedProperty` on the given element\r\n * @param {String} axis - `x` or `y`\r\n * @return {number} borders - The borders size of the given axis\r\n */\r\nfunction getBordersSize(styles, axis) {\r\n    var sideA = axis === 'x' ? 'Left' : 'Top';\r\n    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\r\n    return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\r\n}\r\nfunction getSize(axis, body, html, computedStyle) {\r\n    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\r\n}\r\nfunction getWindowSizes(document) {\r\n    var body = document.body;\r\n    var html = document.documentElement;\r\n    var computedStyle = isIE(10) && getComputedStyle(html);\r\n    return {\r\n        height: getSize('Height', body, html, computedStyle),\r\n        width: getSize('Width', body, html, computedStyle)\r\n    };\r\n}\r\nvar classCallCheck = function (instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n};\r\nvar createClass = function () {\r\n    function defineProperties(target, props) {\r\n        for (var i = 0; i < props.length; i++) {\r\n            var descriptor = props[i];\r\n            descriptor.enumerable = descriptor.enumerable || false;\r\n            descriptor.configurable = true;\r\n            if (\"value\" in descriptor)\r\n                descriptor.writable = true;\r\n            Object.defineProperty(target, descriptor.key, descriptor);\r\n        }\r\n    }\r\n    return function (Constructor, protoProps, staticProps) {\r\n        if (protoProps)\r\n            defineProperties(Constructor.prototype, protoProps);\r\n        if (staticProps)\r\n            defineProperties(Constructor, staticProps);\r\n        return Constructor;\r\n    };\r\n}();\r\nvar defineProperty = function (obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        });\r\n    }\r\n    else {\r\n        obj[key] = value;\r\n    }\r\n    return obj;\r\n};\r\nvar _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n        for (var key in source) {\r\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n};\r\n/**\r\n * Given element offsets, generate an output similar to getBoundingClientRect\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} offsets\r\n * @returns {Object} ClientRect like output\r\n */\r\nfunction getClientRect(offsets) {\r\n    return _extends({}, offsets, {\r\n        right: offsets.left + offsets.width,\r\n        bottom: offsets.top + offsets.height\r\n    });\r\n}\r\n/**\r\n * Get bounding client rect of given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} element\r\n * @return {Object} client rect\r\n */\r\nfunction getBoundingClientRect(element) {\r\n    var rect = {};\r\n    // IE10 10 FIX: Please, don't ask, the element isn't\r\n    // considered in DOM in some circumstances...\r\n    // This isn't reproducible in IE10 compatibility mode of IE11\r\n    try {\r\n        if (isIE(10)) {\r\n            rect = element.getBoundingClientRect();\r\n            var scrollTop = getScroll(element, 'top');\r\n            var scrollLeft = getScroll(element, 'left');\r\n            rect.top += scrollTop;\r\n            rect.left += scrollLeft;\r\n            rect.bottom += scrollTop;\r\n            rect.right += scrollLeft;\r\n        }\r\n        else {\r\n            rect = element.getBoundingClientRect();\r\n        }\r\n    }\r\n    catch (e) { }\r\n    var result = {\r\n        left: rect.left,\r\n        top: rect.top,\r\n        width: rect.right - rect.left,\r\n        height: rect.bottom - rect.top\r\n    };\r\n    // subtract scrollbar size from sizes\r\n    var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\r\n    var width = sizes.width || element.clientWidth || result.right - result.left;\r\n    var height = sizes.height || element.clientHeight || result.bottom - result.top;\r\n    var horizScrollbar = element.offsetWidth - width;\r\n    var vertScrollbar = element.offsetHeight - height;\r\n    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\r\n    // we make this check conditional for performance reasons\r\n    if (horizScrollbar || vertScrollbar) {\r\n        var styles = getStyleComputedProperty(element);\r\n        horizScrollbar -= getBordersSize(styles, 'x');\r\n        vertScrollbar -= getBordersSize(styles, 'y');\r\n        result.width -= horizScrollbar;\r\n        result.height -= vertScrollbar;\r\n    }\r\n    return getClientRect(result);\r\n}\r\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\r\n    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n    var isIE10 = isIE(10);\r\n    var isHTML = parent.nodeName === 'HTML';\r\n    var childrenRect = getBoundingClientRect(children);\r\n    var parentRect = getBoundingClientRect(parent);\r\n    var scrollParent = getScrollParent(children);\r\n    var styles = getStyleComputedProperty(parent);\r\n    var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\r\n    var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\r\n    // In cases where the parent is fixed, we must ignore negative scroll in offset calc\r\n    if (fixedPosition && isHTML) {\r\n        parentRect.top = Math.max(parentRect.top, 0);\r\n        parentRect.left = Math.max(parentRect.left, 0);\r\n    }\r\n    var offsets = getClientRect({\r\n        top: childrenRect.top - parentRect.top - borderTopWidth,\r\n        left: childrenRect.left - parentRect.left - borderLeftWidth,\r\n        width: childrenRect.width,\r\n        height: childrenRect.height\r\n    });\r\n    offsets.marginTop = 0;\r\n    offsets.marginLeft = 0;\r\n    // Subtract margins of documentElement in case it's being used as parent\r\n    // we do this only on HTML because it's the only element that behaves\r\n    // differently when margins are applied to it. The margins are included in\r\n    // the box of the documentElement, in the other cases not.\r\n    if (!isIE10 && isHTML) {\r\n        var marginTop = parseFloat(styles.marginTop, 10);\r\n        var marginLeft = parseFloat(styles.marginLeft, 10);\r\n        offsets.top -= borderTopWidth - marginTop;\r\n        offsets.bottom -= borderTopWidth - marginTop;\r\n        offsets.left -= borderLeftWidth - marginLeft;\r\n        offsets.right -= borderLeftWidth - marginLeft;\r\n        // Attach marginTop and marginLeft because in some circumstances we may need them\r\n        offsets.marginTop = marginTop;\r\n        offsets.marginLeft = marginLeft;\r\n    }\r\n    if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\r\n        offsets = includeScroll(offsets, parent);\r\n    }\r\n    return offsets;\r\n}\r\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\r\n    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    var html = element.ownerDocument.documentElement;\r\n    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\r\n    var width = Math.max(html.clientWidth, window.innerWidth || 0);\r\n    var height = Math.max(html.clientHeight, window.innerHeight || 0);\r\n    var scrollTop = !excludeScroll ? getScroll(html) : 0;\r\n    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\r\n    var offset = {\r\n        top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\r\n        left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\r\n        width: width,\r\n        height: height\r\n    };\r\n    return getClientRect(offset);\r\n}\r\n/**\r\n * Check if the given element is fixed or is inside a fixed parent\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {Element} customContainer\r\n * @returns {Boolean} answer to \"isFixed?\"\r\n */\r\nfunction isFixed(element) {\r\n    var nodeName = element.nodeName;\r\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\r\n        return false;\r\n    }\r\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\r\n        return true;\r\n    }\r\n    var parentNode = getParentNode(element);\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    return isFixed(parentNode);\r\n}\r\n/**\r\n * Finds the first parent of an element that has a transformed property defined\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} first transformed parent or documentElement\r\n */\r\nfunction getFixedPositionOffsetParent(element) {\r\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n    if (!element || !element.parentElement || isIE()) {\r\n        return document.documentElement;\r\n    }\r\n    var el = element.parentElement;\r\n    while (el && getStyleComputedProperty(el, 'transform') === 'none') {\r\n        el = el.parentElement;\r\n    }\r\n    return el || document.documentElement;\r\n}\r\n/**\r\n * Computed the boundaries limits and return them\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} popper\r\n * @param {HTMLElement} reference\r\n * @param {number} padding\r\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\r\n * @param {Boolean} fixedPosition - Is in fixed position mode\r\n * @returns {Object} Coordinates of the boundaries\r\n */\r\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\r\n    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\r\n    // NOTE: 1 DOM access here\r\n    var boundaries = { top: 0, left: 0 };\r\n    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\r\n    // Handle viewport case\r\n    if (boundariesElement === 'viewport') {\r\n        boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\r\n    }\r\n    else {\r\n        // Handle other cases based on DOM element used as boundaries\r\n        var boundariesNode = void 0;\r\n        if (boundariesElement === 'scrollParent') {\r\n            boundariesNode = getScrollParent(getParentNode(reference));\r\n            if (boundariesNode.nodeName === 'BODY') {\r\n                boundariesNode = popper.ownerDocument.documentElement;\r\n            }\r\n        }\r\n        else if (boundariesElement === 'window') {\r\n            boundariesNode = popper.ownerDocument.documentElement;\r\n        }\r\n        else {\r\n            boundariesNode = boundariesElement;\r\n        }\r\n        var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\r\n        // In case of HTML, we need a different computation\r\n        if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\r\n            var _getWindowSizes = getWindowSizes(popper.ownerDocument), height = _getWindowSizes.height, width = _getWindowSizes.width;\r\n            boundaries.top += offsets.top - offsets.marginTop;\r\n            boundaries.bottom = height + offsets.top;\r\n            boundaries.left += offsets.left - offsets.marginLeft;\r\n            boundaries.right = width + offsets.left;\r\n        }\r\n        else {\r\n            // for all the other DOM elements, this one is good\r\n            boundaries = offsets;\r\n        }\r\n    }\r\n    // Add paddings\r\n    padding = padding || 0;\r\n    var isPaddingNumber = typeof padding === 'number';\r\n    boundaries.left += isPaddingNumber ? padding : padding.left || 0;\r\n    boundaries.top += isPaddingNumber ? padding : padding.top || 0;\r\n    boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\r\n    boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\r\n    return boundaries;\r\n}\r\nfunction getArea(_ref) {\r\n    var width = _ref.width, height = _ref.height;\r\n    return width * height;\r\n}\r\n/**\r\n * Utility used to transform the `auto` placement to the placement with more\r\n * available space.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\r\n    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\r\n    if (placement.indexOf('auto') === -1) {\r\n        return placement;\r\n    }\r\n    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\r\n    var rects = {\r\n        top: {\r\n            width: boundaries.width,\r\n            height: refRect.top - boundaries.top\r\n        },\r\n        right: {\r\n            width: boundaries.right - refRect.right,\r\n            height: boundaries.height\r\n        },\r\n        bottom: {\r\n            width: boundaries.width,\r\n            height: boundaries.bottom - refRect.bottom\r\n        },\r\n        left: {\r\n            width: refRect.left - boundaries.left,\r\n            height: boundaries.height\r\n        }\r\n    };\r\n    var sortedAreas = Object.keys(rects).map(function (key) {\r\n        return _extends({\r\n            key: key\r\n        }, rects[key], {\r\n            area: getArea(rects[key])\r\n        });\r\n    }).sort(function (a, b) {\r\n        return b.area - a.area;\r\n    });\r\n    var filteredAreas = sortedAreas.filter(function (_ref2) {\r\n        var width = _ref2.width, height = _ref2.height;\r\n        return width >= popper.clientWidth && height >= popper.clientHeight;\r\n    });\r\n    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\r\n    var variation = placement.split('-')[1];\r\n    return computedPlacement + (variation ? '-' + variation : '');\r\n}\r\n/**\r\n * Get offsets to the reference element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} state\r\n * @param {Element} popper - the popper element\r\n * @param {Element} reference - the reference element (the popper will be relative to this)\r\n * @param {Element} fixedPosition - is in fixed position mode\r\n * @returns {Object} An object containing the offsets which will be applied to the popper\r\n */\r\nfunction getReferenceOffsets(state, popper, reference) {\r\n    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\r\n    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\r\n}\r\n/**\r\n * Get the outer sizes of the given element (offset size + margins)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Object} object containing width and height properties\r\n */\r\nfunction getOuterSizes(element) {\r\n    var window = element.ownerDocument.defaultView;\r\n    var styles = window.getComputedStyle(element);\r\n    var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\r\n    var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\r\n    var result = {\r\n        width: element.offsetWidth + y,\r\n        height: element.offsetHeight + x\r\n    };\r\n    return result;\r\n}\r\n/**\r\n * Get the opposite placement of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement\r\n * @returns {String} flipped placement\r\n */\r\nfunction getOppositePlacement(placement) {\r\n    var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\r\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\r\n        return hash[matched];\r\n    });\r\n}\r\n/**\r\n * Get offsets to the popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} position - CSS position the Popper will get applied\r\n * @param {HTMLElement} popper - the popper element\r\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\r\n * @param {String} placement - one of the valid placement options\r\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\r\n */\r\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\r\n    placement = placement.split('-')[0];\r\n    // Get popper node sizes\r\n    var popperRect = getOuterSizes(popper);\r\n    // Add position, width and height to our offsets object\r\n    var popperOffsets = {\r\n        width: popperRect.width,\r\n        height: popperRect.height\r\n    };\r\n    // depending by the popper placement we have to compute its offsets slightly differently\r\n    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\r\n    var mainSide = isHoriz ? 'top' : 'left';\r\n    var secondarySide = isHoriz ? 'left' : 'top';\r\n    var measurement = isHoriz ? 'height' : 'width';\r\n    var secondaryMeasurement = !isHoriz ? 'height' : 'width';\r\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\r\n    if (placement === secondarySide) {\r\n        popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\r\n    }\r\n    else {\r\n        popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\r\n    }\r\n    return popperOffsets;\r\n}\r\n/**\r\n * Mimics the `find` method of Array\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nfunction find(arr, check) {\r\n    // use native find if supported\r\n    if (Array.prototype.find) {\r\n        return arr.find(check);\r\n    }\r\n    // use `filter` to obtain the same behavior of `find`\r\n    return arr.filter(check)[0];\r\n}\r\n/**\r\n * Return the index of the matching object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nfunction findIndex(arr, prop, value) {\r\n    // use native findIndex if supported\r\n    if (Array.prototype.findIndex) {\r\n        return arr.findIndex(function (cur) {\r\n            return cur[prop] === value;\r\n        });\r\n    }\r\n    // use `find` + `indexOf` if `findIndex` isn't supported\r\n    var match = find(arr, function (obj) {\r\n        return obj[prop] === value;\r\n    });\r\n    return arr.indexOf(match);\r\n}\r\n/**\r\n * Loop trough the list of modifiers and run them in order,\r\n * each of them will then edit the data object.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {dataObject} data\r\n * @param {Array} modifiers\r\n * @param {String} ends - Optional modifier name used as stopper\r\n * @returns {dataObject}\r\n */\r\nfunction runModifiers(modifiers, data, ends) {\r\n    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\r\n    modifiersToRun.forEach(function (modifier) {\r\n        if (modifier['function']) {\r\n            // eslint-disable-line dot-notation\r\n            console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\r\n        }\r\n        var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\r\n        if (modifier.enabled && isFunction(fn)) {\r\n            // Add properties to offsets to make them a complete clientRect object\r\n            // we do this before each modifier to make sure the previous one doesn't\r\n            // mess with these values\r\n            data.offsets.popper = getClientRect(data.offsets.popper);\r\n            data.offsets.reference = getClientRect(data.offsets.reference);\r\n            data = fn(data, modifier);\r\n        }\r\n    });\r\n    return data;\r\n}\r\n/**\r\n * Updates the position of the popper, computing the new offsets and applying\r\n * the new style.<br />\r\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction update() {\r\n    // if popper is destroyed, don't perform any further update\r\n    if (this.state.isDestroyed) {\r\n        return;\r\n    }\r\n    var data = {\r\n        instance: this,\r\n        styles: {},\r\n        arrowStyles: {},\r\n        attributes: {},\r\n        flipped: false,\r\n        offsets: {}\r\n    };\r\n    // compute reference element offsets\r\n    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\r\n    // compute auto placement, store placement inside the data object,\r\n    // modifiers will be able to edit `placement` if needed\r\n    // and refer to originalPlacement to know the original value\r\n    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\r\n    // store the computed placement inside `originalPlacement`\r\n    data.originalPlacement = data.placement;\r\n    data.positionFixed = this.options.positionFixed;\r\n    // compute the popper offsets\r\n    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\r\n    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\r\n    // run the modifiers\r\n    data = runModifiers(this.modifiers, data);\r\n    // the first `update` will call `onCreate` callback\r\n    // the other ones will call `onUpdate` callback\r\n    if (!this.state.isCreated) {\r\n        this.state.isCreated = true;\r\n        this.options.onCreate(data);\r\n    }\r\n    else {\r\n        this.options.onUpdate(data);\r\n    }\r\n}\r\n/**\r\n * Helper used to know if the given modifier is enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @returns {Boolean}\r\n */\r\nfunction isModifierEnabled(modifiers, modifierName) {\r\n    return modifiers.some(function (_ref) {\r\n        var name = _ref.name, enabled = _ref.enabled;\r\n        return enabled && name === modifierName;\r\n    });\r\n}\r\n/**\r\n * Get the prefixed supported property name\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} property (camelCase)\r\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\r\n */\r\nfunction getSupportedPropertyName(property) {\r\n    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\r\n    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\r\n    for (var i = 0; i < prefixes.length; i++) {\r\n        var prefix = prefixes[i];\r\n        var toCheck = prefix ? '' + prefix + upperProp : property;\r\n        if (typeof document.body.style[toCheck] !== 'undefined') {\r\n            return toCheck;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Destroys the popper.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction destroy() {\r\n    this.state.isDestroyed = true;\r\n    // touch DOM only if `applyStyle` modifier is enabled\r\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\r\n        this.popper.removeAttribute('x-placement');\r\n        this.popper.style.position = '';\r\n        this.popper.style.top = '';\r\n        this.popper.style.left = '';\r\n        this.popper.style.right = '';\r\n        this.popper.style.bottom = '';\r\n        this.popper.style.willChange = '';\r\n        this.popper.style[getSupportedPropertyName('transform')] = '';\r\n    }\r\n    this.disableEventListeners();\r\n    // remove the popper if user explicity asked for the deletion on destroy\r\n    // do not use `remove` because IE11 doesn't support it\r\n    if (this.options.removeOnDestroy) {\r\n        this.popper.parentNode.removeChild(this.popper);\r\n    }\r\n    return this;\r\n}\r\n/**\r\n * Get the window associated with the element\r\n * @argument {Element} element\r\n * @returns {Window}\r\n */\r\nfunction getWindow(element) {\r\n    var ownerDocument = element.ownerDocument;\r\n    return ownerDocument ? ownerDocument.defaultView : window;\r\n}\r\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\r\n    var isBody = scrollParent.nodeName === 'BODY';\r\n    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\r\n    target.addEventListener(event, callback, { passive: true });\r\n    if (!isBody) {\r\n        attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\r\n    }\r\n    scrollParents.push(target);\r\n}\r\n/**\r\n * Setup needed event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nfunction setupEventListeners(reference, options, state, updateBound) {\r\n    // Resize event listener on window\r\n    state.updateBound = updateBound;\r\n    getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\r\n    // Scroll event listener on scroll parents\r\n    var scrollElement = getScrollParent(reference);\r\n    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\r\n    state.scrollElement = scrollElement;\r\n    state.eventsEnabled = true;\r\n    return state;\r\n}\r\n/**\r\n * It will add resize/scroll events and start recalculating\r\n * position of the popper element when they are triggered.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction enableEventListeners() {\r\n    if (!this.state.eventsEnabled) {\r\n        this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\r\n    }\r\n}\r\n/**\r\n * Remove event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nfunction removeEventListeners(reference, state) {\r\n    // Remove resize event listener on window\r\n    getWindow(reference).removeEventListener('resize', state.updateBound);\r\n    // Remove scroll event listener on scroll parents\r\n    state.scrollParents.forEach(function (target) {\r\n        target.removeEventListener('scroll', state.updateBound);\r\n    });\r\n    // Reset state\r\n    state.updateBound = null;\r\n    state.scrollParents = [];\r\n    state.scrollElement = null;\r\n    state.eventsEnabled = false;\r\n    return state;\r\n}\r\n/**\r\n * It will remove resize/scroll events and won't recalculate popper position\r\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\r\n * unless you call `update` method manually.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction disableEventListeners() {\r\n    if (this.state.eventsEnabled) {\r\n        cancelAnimationFrame(this.scheduleUpdate);\r\n        this.state = removeEventListeners(this.reference, this.state);\r\n    }\r\n}\r\n/**\r\n * Tells if a given input is a number\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {*} input to check\r\n * @return {Boolean}\r\n */\r\nfunction isNumeric(n) {\r\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n/**\r\n * Set the style to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the style to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nfunction setStyles(element, styles) {\r\n    Object.keys(styles).forEach(function (prop) {\r\n        var unit = '';\r\n        // add unit if the value is numeric and is one of the following\r\n        if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\r\n            unit = 'px';\r\n        }\r\n        element.style[prop] = styles[prop] + unit;\r\n    });\r\n}\r\n/**\r\n * Set the attributes to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the attributes to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nfunction setAttributes(element, attributes) {\r\n    Object.keys(attributes).forEach(function (prop) {\r\n        var value = attributes[prop];\r\n        if (value !== false) {\r\n            element.setAttribute(prop, attributes[prop]);\r\n        }\r\n        else {\r\n            element.removeAttribute(prop);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\r\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The same data object\r\n */\r\nfunction applyStyle(data) {\r\n    // any property present in `data.styles` will be applied to the popper,\r\n    // in this way we can make the 3rd party modifiers add custom styles to it\r\n    // Be aware, modifiers could override the properties defined in the previous\r\n    // lines of this modifier!\r\n    setStyles(data.instance.popper, data.styles);\r\n    // any property present in `data.attributes` will be applied to the popper,\r\n    // they will be set as HTML attributes of the element\r\n    setAttributes(data.instance.popper, data.attributes);\r\n    // if arrowElement is defined and arrowStyles has some properties\r\n    if (data.arrowElement && Object.keys(data.arrowStyles).length) {\r\n        setStyles(data.arrowElement, data.arrowStyles);\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * Set the x-placement attribute before everything else because it could be used\r\n * to add margins to the popper margins needs to be calculated to get the\r\n * correct popper offsets.\r\n * @method\r\n * @memberof Popper.modifiers\r\n * @param {HTMLElement} reference - The reference element used to position the popper\r\n * @param {HTMLElement} popper - The HTML element used as popper\r\n * @param {Object} options - Popper.js options\r\n */\r\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\r\n    // compute reference element offsets\r\n    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\r\n    // compute auto placement, store placement inside the data object,\r\n    // modifiers will be able to edit `placement` if needed\r\n    // and refer to originalPlacement to know the original value\r\n    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\r\n    popper.setAttribute('x-placement', placement);\r\n    // Apply `position` to popper before anything else because\r\n    // without the position applied we can't guarantee correct computations\r\n    setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\r\n    return options;\r\n}\r\n/**\r\n * @function\r\n * @memberof Popper.Utils\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\r\n * @returns {Object} The popper's position offsets rounded\r\n *\r\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\r\n * good as it can be within reason.\r\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\r\n *\r\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\r\n * as well on High DPI screens).\r\n *\r\n * Firefox prefers no rounding for positioning and does not have blurriness on\r\n * high DPI screens.\r\n *\r\n * Only horizontal placement and left/right values need to be considered.\r\n */\r\nfunction getRoundedOffsets(data, shouldRound) {\r\n    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;\r\n    var round = Math.round, floor = Math.floor;\r\n    var noRound = function noRound(v) {\r\n        return v;\r\n    };\r\n    var referenceWidth = round(reference.width);\r\n    var popperWidth = round(popper.width);\r\n    var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\r\n    var isVariation = data.placement.indexOf('-') !== -1;\r\n    var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\r\n    var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\r\n    var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\r\n    var verticalToInteger = !shouldRound ? noRound : round;\r\n    return {\r\n        left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\r\n        top: verticalToInteger(popper.top),\r\n        bottom: verticalToInteger(popper.bottom),\r\n        right: horizontalToInteger(popper.right)\r\n    };\r\n}\r\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction computeStyle(data, options) {\r\n    var x = options.x, y = options.y;\r\n    var popper = data.offsets.popper;\r\n    // Remove this legacy support in Popper.js v2\r\n    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\r\n        return modifier.name === 'applyStyle';\r\n    }).gpuAcceleration;\r\n    if (legacyGpuAccelerationOption !== undefined) {\r\n        console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\r\n    }\r\n    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\r\n    var offsetParent = getOffsetParent(data.instance.popper);\r\n    var offsetParentRect = getBoundingClientRect(offsetParent);\r\n    // Styles\r\n    var styles = {\r\n        position: popper.position\r\n    };\r\n    var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\r\n    var sideA = x === 'bottom' ? 'top' : 'bottom';\r\n    var sideB = y === 'right' ? 'left' : 'right';\r\n    // if gpuAcceleration is set to `true` and transform is supported,\r\n    //  we use `translate3d` to apply the position to the popper we\r\n    // automatically use the supported prefixed version if needed\r\n    var prefixedProperty = getSupportedPropertyName('transform');\r\n    // now, let's make a step back and look at this code closely (wtf?)\r\n    // If the content of the popper grows once it's been positioned, it\r\n    // may happen that the popper gets misplaced because of the new content\r\n    // overflowing its reference element\r\n    // To avoid this problem, we provide two options (x and y), which allow\r\n    // the consumer to define the offset origin.\r\n    // If we position a popper on top of a reference element, we can set\r\n    // `x` to `top` to make the popper grow towards its top instead of\r\n    // its bottom.\r\n    var left = void 0, top = void 0;\r\n    if (sideA === 'bottom') {\r\n        // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\r\n        // and not the bottom of the html element\r\n        if (offsetParent.nodeName === 'HTML') {\r\n            top = -offsetParent.clientHeight + offsets.bottom;\r\n        }\r\n        else {\r\n            top = -offsetParentRect.height + offsets.bottom;\r\n        }\r\n    }\r\n    else {\r\n        top = offsets.top;\r\n    }\r\n    if (sideB === 'right') {\r\n        if (offsetParent.nodeName === 'HTML') {\r\n            left = -offsetParent.clientWidth + offsets.right;\r\n        }\r\n        else {\r\n            left = -offsetParentRect.width + offsets.right;\r\n        }\r\n    }\r\n    else {\r\n        left = offsets.left;\r\n    }\r\n    if (gpuAcceleration && prefixedProperty) {\r\n        styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\r\n        styles[sideA] = 0;\r\n        styles[sideB] = 0;\r\n        styles.willChange = 'transform';\r\n    }\r\n    else {\r\n        // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\r\n        var invertTop = sideA === 'bottom' ? -1 : 1;\r\n        var invertLeft = sideB === 'right' ? -1 : 1;\r\n        styles[sideA] = top * invertTop;\r\n        styles[sideB] = left * invertLeft;\r\n        styles.willChange = sideA + ', ' + sideB;\r\n    }\r\n    // Attributes\r\n    var attributes = {\r\n        'x-placement': data.placement\r\n    };\r\n    // Update `data` attributes, styles and arrowStyles\r\n    data.attributes = _extends({}, attributes, data.attributes);\r\n    data.styles = _extends({}, styles, data.styles);\r\n    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\r\n    return data;\r\n}\r\n/**\r\n * Helper used to know if the given modifier depends from another one.<br />\r\n * It checks if the needed modifier is listed and enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Array} modifiers - list of modifiers\r\n * @param {String} requestingName - name of requesting modifier\r\n * @param {String} requestedName - name of requested modifier\r\n * @returns {Boolean}\r\n */\r\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\r\n    var requesting = find(modifiers, function (_ref) {\r\n        var name = _ref.name;\r\n        return name === requestingName;\r\n    });\r\n    var isRequired = !!requesting && modifiers.some(function (modifier) {\r\n        return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\r\n    });\r\n    if (!isRequired) {\r\n        var _requesting = '`' + requestingName + '`';\r\n        var requested = '`' + requestedName + '`';\r\n        console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\r\n    }\r\n    return isRequired;\r\n}\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction arrow(data, options) {\r\n    var _data$offsets$arrow;\r\n    // arrow depends on keepTogether in order to work\r\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\r\n        return data;\r\n    }\r\n    var arrowElement = options.element;\r\n    // if arrowElement is a string, suppose it's a CSS selector\r\n    if (typeof arrowElement === 'string') {\r\n        arrowElement = data.instance.popper.querySelector(arrowElement);\r\n        // if arrowElement is not found, don't run the modifier\r\n        if (!arrowElement) {\r\n            return data;\r\n        }\r\n    }\r\n    else {\r\n        // if the arrowElement isn't a query selector we must check that the\r\n        // provided DOM node is child of its popper node\r\n        if (!data.instance.popper.contains(arrowElement)) {\r\n            console.warn('WARNING: `arrow.element` must be child of its popper element!');\r\n            return data;\r\n        }\r\n    }\r\n    var placement = data.placement.split('-')[0];\r\n    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;\r\n    var isVertical = ['left', 'right'].indexOf(placement) !== -1;\r\n    var len = isVertical ? 'height' : 'width';\r\n    var sideCapitalized = isVertical ? 'Top' : 'Left';\r\n    var side = sideCapitalized.toLowerCase();\r\n    var altSide = isVertical ? 'left' : 'top';\r\n    var opSide = isVertical ? 'bottom' : 'right';\r\n    var arrowElementSize = getOuterSizes(arrowElement)[len];\r\n    //\r\n    // extends keepTogether behavior making sure the popper and its\r\n    // reference have enough pixels in conjunction\r\n    //\r\n    // top/left side\r\n    if (reference[opSide] - arrowElementSize < popper[side]) {\r\n        data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\r\n    }\r\n    // bottom/right side\r\n    if (reference[side] + arrowElementSize > popper[opSide]) {\r\n        data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\r\n    }\r\n    data.offsets.popper = getClientRect(data.offsets.popper);\r\n    // compute center of the popper\r\n    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\r\n    // Compute the sideValue using the updated popper offsets\r\n    // take popper margin in account because we don't have this info available\r\n    var css = getStyleComputedProperty(data.instance.popper);\r\n    var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\r\n    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\r\n    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\r\n    // prevent arrowElement from being placed not contiguously to its popper\r\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\r\n    data.arrowElement = arrowElement;\r\n    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\r\n    return data;\r\n}\r\n/**\r\n * Get the opposite placement variation of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement variation\r\n * @returns {String} flipped placement variation\r\n */\r\nfunction getOppositeVariation(variation) {\r\n    if (variation === 'end') {\r\n        return 'start';\r\n    }\r\n    else if (variation === 'start') {\r\n        return 'end';\r\n    }\r\n    return variation;\r\n}\r\n/**\r\n * List of accepted placements to use as values of the `placement` option.<br />\r\n * Valid placements are:\r\n * - `auto`\r\n * - `top`\r\n * - `right`\r\n * - `bottom`\r\n * - `left`\r\n *\r\n * Each placement can have a variation from this list:\r\n * - `-start`\r\n * - `-end`\r\n *\r\n * Variations are interpreted easily if you think of them as the left to right\r\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\r\n * is right.<br />\r\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\r\n *\r\n * Some valid examples are:\r\n * - `top-end` (on top of reference, right aligned)\r\n * - `right-start` (on right of reference, top aligned)\r\n * - `bottom` (on bottom, centered)\r\n * - `auto-end` (on the side with more space available, alignment depends by placement)\r\n *\r\n * @static\r\n * @type {Array}\r\n * @enum {String}\r\n * @readonly\r\n * @method placements\r\n * @memberof Popper\r\n */\r\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\r\n// Get rid of `auto` `auto-start` and `auto-end`\r\nvar validPlacements = placements.slice(3);\r\n/**\r\n * Given an initial placement, returns all the subsequent placements\r\n * clockwise (or counter-clockwise).\r\n *\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement - A valid placement (it accepts variations)\r\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\r\n * @returns {Array} placements including their variations\r\n */\r\nfunction clockwise(placement) {\r\n    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    var index = validPlacements.indexOf(placement);\r\n    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\r\n    return counter ? arr.reverse() : arr;\r\n}\r\nvar BEHAVIORS = {\r\n    FLIP: 'flip',\r\n    CLOCKWISE: 'clockwise',\r\n    COUNTERCLOCKWISE: 'counterclockwise'\r\n};\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction flip(data, options) {\r\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\r\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\r\n        return data;\r\n    }\r\n    if (data.flipped && data.placement === data.originalPlacement) {\r\n        // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\r\n        return data;\r\n    }\r\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\r\n    var placement = data.placement.split('-')[0];\r\n    var placementOpposite = getOppositePlacement(placement);\r\n    var variation = data.placement.split('-')[1] || '';\r\n    var flipOrder = [];\r\n    switch (options.behavior) {\r\n        case BEHAVIORS.FLIP:\r\n            flipOrder = [placement, placementOpposite];\r\n            break;\r\n        case BEHAVIORS.CLOCKWISE:\r\n            flipOrder = clockwise(placement);\r\n            break;\r\n        case BEHAVIORS.COUNTERCLOCKWISE:\r\n            flipOrder = clockwise(placement, true);\r\n            break;\r\n        default:\r\n            flipOrder = options.behavior;\r\n    }\r\n    flipOrder.forEach(function (step, index) {\r\n        if (placement !== step || flipOrder.length === index + 1) {\r\n            return data;\r\n        }\r\n        placement = data.placement.split('-')[0];\r\n        placementOpposite = getOppositePlacement(placement);\r\n        var popperOffsets = data.offsets.popper;\r\n        var refOffsets = data.offsets.reference;\r\n        // using floor because the reference offsets may contain decimals we are not going to consider here\r\n        var floor = Math.floor;\r\n        var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\r\n        var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\r\n        var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\r\n        var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\r\n        var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\r\n        var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\r\n        // flip the variation if required\r\n        var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\r\n        // flips variation if reference element overflows boundaries\r\n        var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\r\n        // flips variation if popper content overflows boundaries\r\n        var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\r\n        var flippedVariation = flippedVariationByRef || flippedVariationByContent;\r\n        if (overlapsRef || overflowsBoundaries || flippedVariation) {\r\n            // this boolean to detect any flip loop\r\n            data.flipped = true;\r\n            if (overlapsRef || overflowsBoundaries) {\r\n                placement = flipOrder[index + 1];\r\n            }\r\n            if (flippedVariation) {\r\n                variation = getOppositeVariation(variation);\r\n            }\r\n            data.placement = placement + (variation ? '-' + variation : '');\r\n            // this object contains `position`, we want to preserve it along with\r\n            // any additional property we may add in the future\r\n            data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\r\n            data = runModifiers(data.instance.modifiers, data, 'flip');\r\n        }\r\n    });\r\n    return data;\r\n}\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction keepTogether(data) {\r\n    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;\r\n    var placement = data.placement.split('-')[0];\r\n    var floor = Math.floor;\r\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\r\n    var side = isVertical ? 'right' : 'bottom';\r\n    var opSide = isVertical ? 'left' : 'top';\r\n    var measurement = isVertical ? 'width' : 'height';\r\n    if (popper[side] < floor(reference[opSide])) {\r\n        data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\r\n    }\r\n    if (popper[opSide] > floor(reference[side])) {\r\n        data.offsets.popper[opSide] = floor(reference[side]);\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * Converts a string containing value + unit into a px value number\r\n * @function\r\n * @memberof {modifiers~offset}\r\n * @private\r\n * @argument {String} str - Value + unit string\r\n * @argument {String} measurement - `height` or `width`\r\n * @argument {Object} popperOffsets\r\n * @argument {Object} referenceOffsets\r\n * @returns {Number|String}\r\n * Value in pixels, or original string if no values were extracted\r\n */\r\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\r\n    // separate value from unit\r\n    var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\r\n    var value = +split[1];\r\n    var unit = split[2];\r\n    // If it's not a number it's an operator, I guess\r\n    if (!value) {\r\n        return str;\r\n    }\r\n    if (unit.indexOf('%') === 0) {\r\n        var element = void 0;\r\n        switch (unit) {\r\n            case '%p':\r\n                element = popperOffsets;\r\n                break;\r\n            case '%':\r\n            case '%r':\r\n            default:\r\n                element = referenceOffsets;\r\n        }\r\n        var rect = getClientRect(element);\r\n        return rect[measurement] / 100 * value;\r\n    }\r\n    else if (unit === 'vh' || unit === 'vw') {\r\n        // if is a vh or vw, we calculate the size based on the viewport\r\n        var size = void 0;\r\n        if (unit === 'vh') {\r\n            size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        }\r\n        else {\r\n            size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n        }\r\n        return size / 100 * value;\r\n    }\r\n    else {\r\n        // if is an explicit pixel unit, we get rid of the unit and keep the value\r\n        // if is an implicit unit, it's px, and we return just the value\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\r\n * @function\r\n * @memberof {modifiers~offset}\r\n * @private\r\n * @argument {String} offset\r\n * @argument {Object} popperOffsets\r\n * @argument {Object} referenceOffsets\r\n * @argument {String} basePlacement\r\n * @returns {Array} a two cells array with x and y offsets in numbers\r\n */\r\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\r\n    var offsets = [0, 0];\r\n    // Use height if placement is left or right and index is 0 otherwise use width\r\n    // in this way the first offset will use an axis and the second one\r\n    // will use the other one\r\n    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\r\n    // Split the offset string to obtain a list of values and operands\r\n    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\r\n    var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\r\n        return frag.trim();\r\n    });\r\n    // Detect if the offset string contains a pair of values or a single one\r\n    // they could be separated by comma or space\r\n    var divider = fragments.indexOf(find(fragments, function (frag) {\r\n        return frag.search(/,|\\s/) !== -1;\r\n    }));\r\n    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\r\n        console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\r\n    }\r\n    // If divider is found, we divide the list of values and operands to divide\r\n    // them by ofset X and Y.\r\n    var splitRegex = /\\s*,\\s*|\\s+/;\r\n    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\r\n    // Convert the values with units to absolute pixels to allow our computations\r\n    ops = ops.map(function (op, index) {\r\n        // Most of the units rely on the orientation of the popper\r\n        var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\r\n        var mergeWithPrevious = false;\r\n        return op\r\n            // This aggregates any `+` or `-` sign that aren't considered operators\r\n            // e.g.: 10 + +5 => [10, +, +5]\r\n            .reduce(function (a, b) {\r\n            if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\r\n                a[a.length - 1] = b;\r\n                mergeWithPrevious = true;\r\n                return a;\r\n            }\r\n            else if (mergeWithPrevious) {\r\n                a[a.length - 1] += b;\r\n                mergeWithPrevious = false;\r\n                return a;\r\n            }\r\n            else {\r\n                return a.concat(b);\r\n            }\r\n        }, [])\r\n            // Here we convert the string values into number values (in px)\r\n            .map(function (str) {\r\n            return toValue(str, measurement, popperOffsets, referenceOffsets);\r\n        });\r\n    });\r\n    // Loop trough the offsets arrays and execute the operations\r\n    ops.forEach(function (op, index) {\r\n        op.forEach(function (frag, index2) {\r\n            if (isNumeric(frag)) {\r\n                offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\r\n            }\r\n        });\r\n    });\r\n    return offsets;\r\n}\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @argument {Number|String} options.offset=0\r\n * The offset value as described in the modifier description\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction offset(data, _ref) {\r\n    var offset = _ref.offset;\r\n    var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;\r\n    var basePlacement = placement.split('-')[0];\r\n    var offsets = void 0;\r\n    if (isNumeric(+offset)) {\r\n        offsets = [+offset, 0];\r\n    }\r\n    else {\r\n        offsets = parseOffset(offset, popper, reference, basePlacement);\r\n    }\r\n    if (basePlacement === 'left') {\r\n        popper.top += offsets[0];\r\n        popper.left -= offsets[1];\r\n    }\r\n    else if (basePlacement === 'right') {\r\n        popper.top += offsets[0];\r\n        popper.left += offsets[1];\r\n    }\r\n    else if (basePlacement === 'top') {\r\n        popper.left += offsets[0];\r\n        popper.top -= offsets[1];\r\n    }\r\n    else if (basePlacement === 'bottom') {\r\n        popper.left += offsets[0];\r\n        popper.top += offsets[1];\r\n    }\r\n    data.popper = popper;\r\n    return data;\r\n}\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction preventOverflow(data, options) {\r\n    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\r\n    // If offsetParent is the reference element, we really want to\r\n    // go one step up and use the next offsetParent as reference to\r\n    // avoid to make this modifier completely useless and look like broken\r\n    if (data.instance.reference === boundariesElement) {\r\n        boundariesElement = getOffsetParent(boundariesElement);\r\n    }\r\n    // NOTE: DOM access here\r\n    // resets the popper's position so that the document size can be calculated excluding\r\n    // the size of the popper element itself\r\n    var transformProp = getSupportedPropertyName('transform');\r\n    var popperStyles = data.instance.popper.style; // assignment to help minification\r\n    var top = popperStyles.top, left = popperStyles.left, transform = popperStyles[transformProp];\r\n    popperStyles.top = '';\r\n    popperStyles.left = '';\r\n    popperStyles[transformProp] = '';\r\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\r\n    // NOTE: DOM access here\r\n    // restores the original style properties after the offsets have been computed\r\n    popperStyles.top = top;\r\n    popperStyles.left = left;\r\n    popperStyles[transformProp] = transform;\r\n    options.boundaries = boundaries;\r\n    var order = options.priority;\r\n    var popper = data.offsets.popper;\r\n    var check = {\r\n        primary: function primary(placement) {\r\n            var value = popper[placement];\r\n            if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\r\n                value = Math.max(popper[placement], boundaries[placement]);\r\n            }\r\n            return defineProperty({}, placement, value);\r\n        },\r\n        secondary: function secondary(placement) {\r\n            var mainSide = placement === 'right' ? 'left' : 'top';\r\n            var value = popper[mainSide];\r\n            if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\r\n                value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\r\n            }\r\n            return defineProperty({}, mainSide, value);\r\n        }\r\n    };\r\n    order.forEach(function (placement) {\r\n        var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\r\n        popper = _extends({}, popper, check[side](placement));\r\n    });\r\n    data.offsets.popper = popper;\r\n    return data;\r\n}\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction shift(data) {\r\n    var placement = data.placement;\r\n    var basePlacement = placement.split('-')[0];\r\n    var shiftvariation = placement.split('-')[1];\r\n    // if shift shiftvariation is specified, run the modifier\r\n    if (shiftvariation) {\r\n        var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;\r\n        var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\r\n        var side = isVertical ? 'left' : 'top';\r\n        var measurement = isVertical ? 'width' : 'height';\r\n        var shiftOffsets = {\r\n            start: defineProperty({}, side, reference[side]),\r\n            end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\r\n        };\r\n        data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction hide(data) {\r\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\r\n        return data;\r\n    }\r\n    var refRect = data.offsets.reference;\r\n    var bound = find(data.instance.modifiers, function (modifier) {\r\n        return modifier.name === 'preventOverflow';\r\n    }).boundaries;\r\n    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\r\n        // Avoid unnecessary DOM access if visibility hasn't changed\r\n        if (data.hide === true) {\r\n            return data;\r\n        }\r\n        data.hide = true;\r\n        data.attributes['x-out-of-boundaries'] = '';\r\n    }\r\n    else {\r\n        // Avoid unnecessary DOM access if visibility hasn't changed\r\n        if (data.hide === false) {\r\n            return data;\r\n        }\r\n        data.hide = false;\r\n        data.attributes['x-out-of-boundaries'] = false;\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction inner(data) {\r\n    var placement = data.placement;\r\n    var basePlacement = placement.split('-')[0];\r\n    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;\r\n    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\r\n    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\r\n    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\r\n    data.placement = getOppositePlacement(placement);\r\n    data.offsets.popper = getClientRect(popper);\r\n    return data;\r\n}\r\n/**\r\n * Modifier function, each modifier can have a function of this type assigned\r\n * to its `fn` property.<br />\r\n * These functions will be called on each update, this means that you must\r\n * make sure they are performant enough to avoid performance bottlenecks.\r\n *\r\n * @function ModifierFn\r\n * @argument {dataObject} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {dataObject} The data object, properly modified\r\n */\r\n/**\r\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\r\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\r\n * needed by the library.\r\n *\r\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\r\n * All the other properties are configurations that could be tweaked.\r\n * @namespace modifiers\r\n */\r\nvar modifiers = {\r\n    /**\r\n     * Modifier used to shift the popper on the start or end of its reference\r\n     * element.<br />\r\n     * It will read the variation of the `placement` property.<br />\r\n     * It can be one either `-end` or `-start`.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    shift: {\r\n        /** @prop {number} order=100 - Index used to define the order of execution */\r\n        order: 100,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: shift\r\n    },\r\n    /**\r\n     * The `offset` modifier can shift your popper on both its axis.\r\n     *\r\n     * It accepts the following units:\r\n     * - `px` or unit-less, interpreted as pixels\r\n     * - `%` or `%r`, percentage relative to the length of the reference element\r\n     * - `%p`, percentage relative to the length of the popper element\r\n     * - `vw`, CSS viewport width unit\r\n     * - `vh`, CSS viewport height unit\r\n     *\r\n     * For length is intended the main axis relative to the placement of the popper.<br />\r\n     * This means that if the placement is `top` or `bottom`, the length will be the\r\n     * `width`. In case of `left` or `right`, it will be the `height`.\r\n     *\r\n     * You can provide a single value (as `Number` or `String`), or a pair of values\r\n     * as `String` divided by a comma or one (or more) white spaces.<br />\r\n     * The latter is a deprecated method because it leads to confusion and will be\r\n     * removed in v2.<br />\r\n     * Additionally, it accepts additions and subtractions between different units.\r\n     * Note that multiplications and divisions aren't supported.\r\n     *\r\n     * Valid examples are:\r\n     * ```\r\n     * 10\r\n     * '10%'\r\n     * '10, 10'\r\n     * '10%, 10'\r\n     * '10 + 10%'\r\n     * '10 - 5vh + 3%'\r\n     * '-10px + 5vh, 5px - 6%'\r\n     * ```\r\n     * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\r\n     * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\r\n     * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    offset: {\r\n        /** @prop {number} order=200 - Index used to define the order of execution */\r\n        order: 200,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: offset,\r\n        /** @prop {Number|String} offset=0\r\n         * The offset value as described in the modifier description\r\n         */\r\n        offset: 0\r\n    },\r\n    /**\r\n     * Modifier used to prevent the popper from being positioned outside the boundary.\r\n     *\r\n     * A scenario exists where the reference itself is not within the boundaries.<br />\r\n     * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\r\n     * In this case we need to decide whether the popper should either:\r\n     *\r\n     * - detach from the reference and remain \"trapped\" in the boundaries, or\r\n     * - if it should ignore the boundary and \"escape with its reference\"\r\n     *\r\n     * When `escapeWithReference` is set to`true` and reference is completely\r\n     * outside its boundaries, the popper will overflow (or completely leave)\r\n     * the boundaries in order to remain attached to the edge of the reference.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    preventOverflow: {\r\n        /** @prop {number} order=300 - Index used to define the order of execution */\r\n        order: 300,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: preventOverflow,\r\n        /**\r\n         * @prop {Array} [priority=['left','right','top','bottom']]\r\n         * Popper will try to prevent overflow following these priorities by default,\r\n         * then, it could overflow on the left and on top of the `boundariesElement`\r\n         */\r\n        priority: ['left', 'right', 'top', 'bottom'],\r\n        /**\r\n         * @prop {number} padding=5\r\n         * Amount of pixel used to define a minimum distance between the boundaries\r\n         * and the popper. This makes sure the popper always has a little padding\r\n         * between the edges of its container\r\n         */\r\n        padding: 5,\r\n        /**\r\n         * @prop {String|HTMLElement} boundariesElement='scrollParent'\r\n         * Boundaries used by the modifier. Can be `scrollParent`, `window`,\r\n         * `viewport` or any DOM element.\r\n         */\r\n        boundariesElement: 'scrollParent'\r\n    },\r\n    /**\r\n     * Modifier used to make sure the reference and its popper stay near each other\r\n     * without leaving any gap between the two. Especially useful when the arrow is\r\n     * enabled and you want to ensure that it points to its reference element.\r\n     * It cares only about the first axis. You can still have poppers with margin\r\n     * between the popper and its reference element.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    keepTogether: {\r\n        /** @prop {number} order=400 - Index used to define the order of execution */\r\n        order: 400,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: keepTogether\r\n    },\r\n    /**\r\n     * This modifier is used to move the `arrowElement` of the popper to make\r\n     * sure it is positioned between the reference element and its popper element.\r\n     * It will read the outer size of the `arrowElement` node to detect how many\r\n     * pixels of conjunction are needed.\r\n     *\r\n     * It has no effect if no `arrowElement` is provided.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    arrow: {\r\n        /** @prop {number} order=500 - Index used to define the order of execution */\r\n        order: 500,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: arrow,\r\n        /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\r\n        element: '[x-arrow]'\r\n    },\r\n    /**\r\n     * Modifier used to flip the popper's placement when it starts to overlap its\r\n     * reference element.\r\n     *\r\n     * Requires the `preventOverflow` modifier before it in order to work.\r\n     *\r\n     * **NOTE:** this modifier will interrupt the current update cycle and will\r\n     * restart it if it detects the need to flip the placement.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    flip: {\r\n        /** @prop {number} order=600 - Index used to define the order of execution */\r\n        order: 600,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: flip,\r\n        /**\r\n         * @prop {String|Array} behavior='flip'\r\n         * The behavior used to change the popper's placement. It can be one of\r\n         * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\r\n         * placements (with optional variations)\r\n         */\r\n        behavior: 'flip',\r\n        /**\r\n         * @prop {number} padding=5\r\n         * The popper will flip if it hits the edges of the `boundariesElement`\r\n         */\r\n        padding: 5,\r\n        /**\r\n         * @prop {String|HTMLElement} boundariesElement='viewport'\r\n         * The element which will define the boundaries of the popper position.\r\n         * The popper will never be placed outside of the defined boundaries\r\n         * (except if `keepTogether` is enabled)\r\n         */\r\n        boundariesElement: 'viewport',\r\n        /**\r\n         * @prop {Boolean} flipVariations=false\r\n         * The popper will switch placement variation between `-start` and `-end` when\r\n         * the reference element overlaps its boundaries.\r\n         *\r\n         * The original placement should have a set variation.\r\n         */\r\n        flipVariations: false,\r\n        /**\r\n         * @prop {Boolean} flipVariationsByContent=false\r\n         * The popper will switch placement variation between `-start` and `-end` when\r\n         * the popper element overlaps its reference boundaries.\r\n         *\r\n         * The original placement should have a set variation.\r\n         */\r\n        flipVariationsByContent: false\r\n    },\r\n    /**\r\n     * Modifier used to make the popper flow toward the inner of the reference element.\r\n     * By default, when this modifier is disabled, the popper will be placed outside\r\n     * the reference element.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    inner: {\r\n        /** @prop {number} order=700 - Index used to define the order of execution */\r\n        order: 700,\r\n        /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\r\n        enabled: false,\r\n        /** @prop {ModifierFn} */\r\n        fn: inner\r\n    },\r\n    /**\r\n     * Modifier used to hide the popper when its reference element is outside of the\r\n     * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\r\n     * be used to hide with a CSS selector the popper when its reference is\r\n     * out of boundaries.\r\n     *\r\n     * Requires the `preventOverflow` modifier before it in order to work.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    hide: {\r\n        /** @prop {number} order=800 - Index used to define the order of execution */\r\n        order: 800,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: hide\r\n    },\r\n    /**\r\n     * Computes the style that will be applied to the popper element to gets\r\n     * properly positioned.\r\n     *\r\n     * Note that this modifier will not touch the DOM, it just prepares the styles\r\n     * so that `applyStyle` modifier can apply it. This separation is useful\r\n     * in case you need to replace `applyStyle` with a custom implementation.\r\n     *\r\n     * This modifier has `850` as `order` value to maintain backward compatibility\r\n     * with previous versions of Popper.js. Expect the modifiers ordering method\r\n     * to change in future major versions of the library.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    computeStyle: {\r\n        /** @prop {number} order=850 - Index used to define the order of execution */\r\n        order: 850,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: computeStyle,\r\n        /**\r\n         * @prop {Boolean} gpuAcceleration=true\r\n         * If true, it uses the CSS 3D transformation to position the popper.\r\n         * Otherwise, it will use the `top` and `left` properties\r\n         */\r\n        gpuAcceleration: true,\r\n        /**\r\n         * @prop {string} [x='bottom']\r\n         * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\r\n         * Change this if your popper should grow in a direction different from `bottom`\r\n         */\r\n        x: 'bottom',\r\n        /**\r\n         * @prop {string} [x='left']\r\n         * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\r\n         * Change this if your popper should grow in a direction different from `right`\r\n         */\r\n        y: 'right'\r\n    },\r\n    /**\r\n     * Applies the computed styles to the popper element.\r\n     *\r\n     * All the DOM manipulations are limited to this modifier. This is useful in case\r\n     * you want to integrate Popper.js inside a framework or view library and you\r\n     * want to delegate all the DOM manipulations to it.\r\n     *\r\n     * Note that if you disable this modifier, you must make sure the popper element\r\n     * has its position set to `absolute` before Popper.js can do its work!\r\n     *\r\n     * Just disable this modifier and define your own to achieve the desired effect.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\r\n    applyStyle: {\r\n        /** @prop {number} order=900 - Index used to define the order of execution */\r\n        order: 900,\r\n        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n        enabled: true,\r\n        /** @prop {ModifierFn} */\r\n        fn: applyStyle,\r\n        /** @prop {Function} */\r\n        onLoad: applyStyleOnLoad,\r\n        /**\r\n         * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\r\n         * @prop {Boolean} gpuAcceleration=true\r\n         * If true, it uses the CSS 3D transformation to position the popper.\r\n         * Otherwise, it will use the `top` and `left` properties\r\n         */\r\n        gpuAcceleration: undefined\r\n    }\r\n};\r\n/**\r\n * The `dataObject` is an object containing all the information used by Popper.js.\r\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\r\n * @name dataObject\r\n * @property {Object} data.instance The Popper.js instance\r\n * @property {String} data.placement Placement applied to popper\r\n * @property {String} data.originalPlacement Placement originally defined on init\r\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\r\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\r\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\r\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\r\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\r\n * @property {Object} data.boundaries Offsets of the popper boundaries\r\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\r\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\r\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\r\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\r\n */\r\n/**\r\n * Default options provided to Popper.js constructor.<br />\r\n * These can be overridden using the `options` argument of Popper.js.<br />\r\n * To override an option, simply pass an object with the same\r\n * structure of the `options` object, as the 3rd argument. For example:\r\n * ```\r\n * new Popper(ref, pop, {\r\n *   modifiers: {\r\n *     preventOverflow: { enabled: false }\r\n *   }\r\n * })\r\n * ```\r\n * @type {Object}\r\n * @static\r\n * @memberof Popper\r\n */\r\nvar Defaults = {\r\n    /**\r\n     * Popper's placement.\r\n     * @prop {Popper.placements} placement='bottom'\r\n     */\r\n    placement: 'bottom',\r\n    /**\r\n     * Set this to true if you want popper to position it self in 'fixed' mode\r\n     * @prop {Boolean} positionFixed=false\r\n     */\r\n    positionFixed: false,\r\n    /**\r\n     * Whether events (resize, scroll) are initially enabled.\r\n     * @prop {Boolean} eventsEnabled=true\r\n     */\r\n    eventsEnabled: true,\r\n    /**\r\n     * Set to true if you want to automatically remove the popper when\r\n     * you call the `destroy` method.\r\n     * @prop {Boolean} removeOnDestroy=false\r\n     */\r\n    removeOnDestroy: false,\r\n    /**\r\n     * Callback called when the popper is created.<br />\r\n     * By default, it is set to no-op.<br />\r\n     * Access Popper.js instance with `data.instance`.\r\n     * @prop {onCreate}\r\n     */\r\n    onCreate: function onCreate() { },\r\n    /**\r\n     * Callback called when the popper is updated. This callback is not called\r\n     * on the initialization/creation of the popper, but only on subsequent\r\n     * updates.<br />\r\n     * By default, it is set to no-op.<br />\r\n     * Access Popper.js instance with `data.instance`.\r\n     * @prop {onUpdate}\r\n     */\r\n    onUpdate: function onUpdate() { },\r\n    /**\r\n     * List of modifiers used to modify the offsets before they are applied to the popper.\r\n     * They provide most of the functionalities of Popper.js.\r\n     * @prop {modifiers}\r\n     */\r\n    modifiers: modifiers\r\n};\r\n/**\r\n * @callback onCreate\r\n * @param {dataObject} data\r\n */\r\n/**\r\n * @callback onUpdate\r\n * @param {dataObject} data\r\n */\r\n// Utils\r\n// Methods\r\nvar Popper = function () {\r\n    /**\r\n     * Creates a new Popper.js instance.\r\n     * @class Popper\r\n     * @param {Element|referenceObject} reference - The reference element used to position the popper\r\n     * @param {Element} popper - The HTML / XML element used as the popper\r\n     * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\r\n     * @return {Object} instance - The generated Popper.js instance\r\n     */\r\n    function Popper(reference, popper) {\r\n        var _this = this;\r\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n        classCallCheck(this, Popper);\r\n        this.scheduleUpdate = function () {\r\n            return requestAnimationFrame(_this.update);\r\n        };\r\n        // make update() debounced, so that it only runs at most once-per-tick\r\n        this.update = debounce(this.update.bind(this));\r\n        // with {} we create a new object with the options inside it\r\n        this.options = _extends({}, Popper.Defaults, options);\r\n        // init state\r\n        this.state = {\r\n            isDestroyed: false,\r\n            isCreated: false,\r\n            scrollParents: []\r\n        };\r\n        // get reference and popper elements (allow jQuery wrappers)\r\n        this.reference = reference && reference.jquery ? reference[0] : reference;\r\n        this.popper = popper && popper.jquery ? popper[0] : popper;\r\n        // Deep merge modifiers options\r\n        this.options.modifiers = {};\r\n        Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\r\n            _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\r\n        });\r\n        // Refactoring modifiers' list (Object => Array)\r\n        this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\r\n            return _extends({\r\n                name: name\r\n            }, _this.options.modifiers[name]);\r\n        })\r\n            // sort the modifiers by order\r\n            .sort(function (a, b) {\r\n            return a.order - b.order;\r\n        });\r\n        // modifiers have the ability to execute arbitrary code when Popper.js get inited\r\n        // such code is executed in the same order of its modifier\r\n        // they could add new properties to their options configuration\r\n        // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\r\n        this.modifiers.forEach(function (modifierOptions) {\r\n            if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\r\n                modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\r\n            }\r\n        });\r\n        // fire the first update to position the popper in the right place\r\n        this.update();\r\n        var eventsEnabled = this.options.eventsEnabled;\r\n        if (eventsEnabled) {\r\n            // setup event listeners, they will take care of update the position in specific situations\r\n            this.enableEventListeners();\r\n        }\r\n        this.state.eventsEnabled = eventsEnabled;\r\n    }\r\n    // We can't use class properties because they don't get listed in the\r\n    // class prototype and break stuff like Sinon stubs\r\n    createClass(Popper, [{\r\n            key: 'update',\r\n            value: function update$$1() {\r\n                return update.call(this);\r\n            }\r\n        }, {\r\n            key: 'destroy',\r\n            value: function destroy$$1() {\r\n                return destroy.call(this);\r\n            }\r\n        }, {\r\n            key: 'enableEventListeners',\r\n            value: function enableEventListeners$$1() {\r\n                return enableEventListeners.call(this);\r\n            }\r\n        }, {\r\n            key: 'disableEventListeners',\r\n            value: function disableEventListeners$$1() {\r\n                return disableEventListeners.call(this);\r\n            }\r\n            /**\r\n             * Schedules an update. It will run on the next UI update available.\r\n             * @method scheduleUpdate\r\n             * @memberof Popper\r\n             */\r\n            /**\r\n             * Collection of utilities useful when writing custom modifiers.\r\n             * Starting from version 1.7, this method is available only if you\r\n             * include `popper-utils.js` before `popper.js`.\r\n             *\r\n             * **DEPRECATION**: This way to access PopperUtils is deprecated\r\n             * and will be removed in v2! Use the PopperUtils module directly instead.\r\n             * Due to the high instability of the methods contained in Utils, we can't\r\n             * guarantee them to follow semver. Use them at your own risk!\r\n             * @static\r\n             * @private\r\n             * @type {Object}\r\n             * @deprecated since version 1.8\r\n             * @member Utils\r\n             * @memberof Popper\r\n             */\r\n        }]);\r\n    return Popper;\r\n}();\r\n/**\r\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\r\n * and lets you use it as replacement of a real DOM node.<br />\r\n * You can use this method to position a popper relatively to a set of coordinates\r\n * in case you don't have a DOM node to use as reference.\r\n *\r\n * ```\r\n * new Popper(referenceObject, popperNode);\r\n * ```\r\n *\r\n * NB: This feature isn't supported in Internet Explorer 10.\r\n * @name referenceObject\r\n * @property {Function} data.getBoundingClientRect\r\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\r\n * @property {number} data.clientWidth\r\n * An ES6 getter that will return the width of the virtual reference element.\r\n * @property {number} data.clientHeight\r\n * An ES6 getter that will return the height of the virtual reference element.\r\n */\r\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\r\nPopper.placements = placements;\r\nPopper.Defaults = Defaults;\r\nexport { Popper as r };\r\n"],"sourceRoot":""}
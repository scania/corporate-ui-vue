{"version":3,"sources":["webpack:///./node_modules/corporate-ui/dist/esm-es5/c-icon.entry.js","webpack:///./node_modules/corporate-ui/dist/esm-es5/themeStyle-1eba4ba6.js"],"names":["Icon","hostRef","this","name","currentTheme","icons","components","ContextStore","prototype","setTheme","undefined","theme","store","getState","current","items","setIcon","icon","question","Object","keys","width","height","console","warn","componentWillLoad","_this","window","CorporateUi","subscribe","tagName","style","el","nodeName","toLowerCase","componentDidLoad","shadowRoot","render","xmlns","viewBox","fill","d","definition","defineProperty","get","enumerable","configurable","themeStyle","styleThis","css","version","adoptedStyleSheets","CSSStyleSheet","replaceSync","node","querySelector","document","createElement","id","styleSheet","cssText","appendChild","createTextNode","insertBefore","firstChild","nextSibling"],"mappings":"gHAAA,0EAEIA,EAAsB,WACtB,SAASA,EAAKC,GACV,eAAiBC,KAAMD,GACvBC,KAAKC,KAAO,WACZD,KAAKE,aAAe,CAAEC,MAAO,GAAIC,WAAY,IAC7CJ,KAAKK,aAAe,eAAWL,KAAM,SAkEzC,OAhEAF,EAAKQ,UAAUC,SAAW,SAAUN,QACnB,IAATA,IAAmBA,OAAOO,GAC9BR,KAAKS,MAAQR,GAAQD,KAAKU,MAAMC,WAAWF,MAAMG,QACjDZ,KAAKE,aAAeF,KAAKU,MAAMC,WAAWF,MAAMI,MAAMb,KAAKS,OAEtDR,GAGLD,KAAKc,WAEThB,EAAKQ,UAAUQ,QAAU,SAAUb,GAE/B,QADa,IAATA,IAAmBA,EAAOD,KAAKC,MAC9BD,KAAKU,MAAMC,WAAWF,MAAMI,MAAMb,KAAKS,OAA5C,CAIA,IAAII,EAAQb,KAAKU,MAAMC,WAAWF,MAAMI,MAAMb,KAAKS,OAAON,MAG1DH,KAAKe,KAAOF,EAAMZ,IAASY,EAAMG,UAAYH,EAAMI,OAAOC,KAAKL,GAAO,KAAO,CAAEM,MAAO,EAAGC,OAAQ,QAN7FC,QAAQC,KAAK,8BAQrBxB,EAAKQ,UAAUiB,kBAAoB,WAC/B,IAAIC,EAAQxB,KACZA,KAAKU,MAAQV,KAAKK,cAAgBoB,OAAOC,YAAYhB,MACrDV,KAAKS,MAAQT,KAAKU,MAAMC,WAAWF,MAAMG,QACzCZ,KAAKE,aAAeF,KAAKU,MAAMC,WAAWF,MAAMT,KAAKS,OACrDT,KAAKU,MAAMiB,WAAU,WACjBH,EAAMf,MAAQe,EAAMd,MAAMC,WAAWF,MAAMG,QAC3CY,EAAMtB,aAAesB,EAAMd,MAAMC,WAAWF,MAAMe,EAAMf,OACxD,eAAWe,EAAMtB,aAAcsB,EAAMI,QAASJ,EAAMK,MAAOL,EAAMM,OAE/D9B,KAAK8B,IAAM9B,KAAK8B,GAAGC,WAEzB/B,KAAK4B,QAAU5B,KAAK8B,GAAGC,SAASC,gBAEpClC,EAAKQ,UAAU2B,iBAAmB,WAC9BjC,KAAK6B,MAAQ7B,KAAK8B,GAAGI,WAAW,uBAAyB,GACzD,eAAWlC,KAAKE,aAAcF,KAAK4B,QAAS5B,KAAK6B,MAAO7B,KAAK8B,KAEjEhC,EAAKQ,UAAU6B,OAAS,WACpB,MAAO,CACH,eAAE,MAAO,CAAEC,MAAO,6BAA8BC,QAAS,QAAUrC,KAAKe,KAAOf,KAAKe,KAAKI,MAAQ,KAAO,KAAOnB,KAAKe,KAAOf,KAAKe,KAAKK,OAAS,MAAQ,eAAE,OAAQ,CAAEkB,KAAM,eAAgBC,EAAGvC,KAAKe,KAAOf,KAAKe,KAAKyB,WAAa,QAGtOvB,OAAOwB,eAAe3C,EAAKQ,UAAW,KAAM,CACxCoC,IAAK,WAAc,OAAO,eAAW1C,OACrC2C,YAAY,EACZC,cAAc,IAElB3B,OAAOwB,eAAe3C,EAAM,WAAY,CACpC4C,IAAK,WACD,MAAO,CACH,MAAS,CAAC,YACV,KAAQ,CAAC,aAGjBC,YAAY,EACZC,cAAc,IAElB3B,OAAOwB,eAAe3C,EAAM,QAAS,CACjC4C,IAAK,WAAc,MAAO,iNAC1BC,YAAY,EACZC,cAAc,IAEX9C,EAvEc,I,kCCFzB,SAAS+C,EAAW3C,EAAc0B,EAASkB,EAAWhB,GAMlD,IAAID,EACAkB,EAAM7C,EAAeA,EAAaE,WAAWwB,GAAW,GAE5D,GAAK1B,GAAiBA,EAAa8C,SAAYF,EAI/C,GAAIhB,EAAGI,WAAWe,mBACdpB,EAAQ,IAAIqB,cACZrB,EAAMsB,YAAYJ,GAElBjB,EAAGI,WAAWe,mBAAqB,CAACnB,EAAGI,WAAWe,mBAAmB,GAAIpB,OAExE,CAED,IAAIuB,EAAOtB,EAAGI,YAAcJ,EAC5BD,EAAQC,EAAGuB,cAAc,gBAAkBC,SAASC,cAAc,SAGlE1B,EAAM2B,GAAK,aACP3B,EAAM4B,WACN5B,EAAM4B,WAAWC,QAAUX,EAG3BlB,EAAM8B,YAAYL,SAASM,eAAeb,IAEzCK,EAAKC,cAAc,gBACpBD,EAAKS,aAAahC,EAAOuB,EAAKU,WAAWC,cAjCrD","file":"js/chunk-b4b4a2b0.12ed563b.js","sourcesContent":["import { r as registerInstance, c as getContext, h, g as getElement } from './core-dafe424f.js';\r\nimport { t as themeStyle } from './themeStyle-1eba4ba6.js';\r\nvar Icon = /** @class */ (function () {\r\n    function Icon(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.name = 'question';\r\n        this.currentTheme = { icons: {}, components: [] };\r\n        this.ContextStore = getContext(this, \"store\");\r\n    }\r\n    Icon.prototype.setTheme = function (name) {\r\n        if (name === void 0) { name = undefined; }\r\n        this.theme = name || this.store.getState().theme.current;\r\n        this.currentTheme = this.store.getState().theme.items[this.theme];\r\n        // If no theme is used then we return;\r\n        if (!name)\r\n            return;\r\n        // Only setIcons when there is a theme\r\n        this.setIcon();\r\n    };\r\n    Icon.prototype.setIcon = function (name) {\r\n        if (name === void 0) { name = this.name; }\r\n        if (!this.store.getState().theme.items[this.theme]) {\r\n            console.warn('No icons in this packages');\r\n            return;\r\n        }\r\n        var items = this.store.getState().theme.items[this.theme].icons;\r\n        // TODO: We should have the default icon being a simple\r\n        // square instead of first icon in the collection\r\n        this.icon = items[name] || items.question || items[Object.keys(items)[0]] || { width: 0, height: 0 };\r\n    };\r\n    Icon.prototype.componentWillLoad = function () {\r\n        var _this = this;\r\n        this.store = this.ContextStore || window.CorporateUi.store;\r\n        this.theme = this.store.getState().theme.current;\r\n        this.currentTheme = this.store.getState().theme[this.theme];\r\n        this.store.subscribe(function () {\r\n            _this.theme = _this.store.getState().theme.current;\r\n            _this.currentTheme = _this.store.getState().theme[_this.theme];\r\n            themeStyle(_this.currentTheme, _this.tagName, _this.style, _this.el);\r\n        });\r\n        if (!(this.el && this.el.nodeName))\r\n            return;\r\n        this.tagName = this.el.nodeName.toLowerCase();\r\n    };\r\n    Icon.prototype.componentDidLoad = function () {\r\n        this.style = this.el.shadowRoot['adoptedStyleSheets'] || [];\r\n        themeStyle(this.currentTheme, this.tagName, this.style, this.el);\r\n    };\r\n    Icon.prototype.render = function () {\r\n        return [\r\n            h(\"svg\", { xmlns: 'http://www.w3.org/2000/svg', viewBox: \"0 0 \" + (this.icon ? this.icon.width : '0') + \" \" + (this.icon ? this.icon.height : '0') }, h(\"path\", { fill: 'currentColor', d: this.icon ? this.icon.definition : '' })),\r\n        ];\r\n    };\r\n    Object.defineProperty(Icon.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Icon, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"theme\": [\"setTheme\"],\r\n                \"name\": [\"setIcon\"]\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Icon, \"style\", {\r\n        get: function () { return \":host,:host *,:host :after,:host :before{-webkit-box-sizing:border-box;box-sizing:border-box}:host{display:inline-block;vertical-align:middle;line-height:0}:host svg{height:1em;width:1em;fill:currentColor}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Icon;\r\n}());\r\nexport { Icon as c_icon };\r\n","function themeStyle(currentTheme, tagName, styleThis, el) {\r\n    /*\r\n      Helper function that will appened a stylesheet with scoped styling for specific component\r\n      either in the shadowRoot with adoptedStyleSheet API\r\n      or with a fallback method (IE,Old edge and so on)\r\n    */\r\n    var style;\r\n    var css = currentTheme ? currentTheme.components[tagName] : '';\r\n    // Fallback for currentTheme, initially empty or the currentTheme doesn't contain a version property\r\n    if (!currentTheme || !currentTheme.version || !styleThis) {\r\n        return;\r\n    }\r\n    // If the browser has support for adoptedStyleSheet (Chromium)\r\n    if (el.shadowRoot.adoptedStyleSheets) {\r\n        style = new CSSStyleSheet();\r\n        style.replaceSync(css);\r\n        // TODO: We should not take first index we should all except the previous style\r\n        el.shadowRoot.adoptedStyleSheets = [el.shadowRoot.adoptedStyleSheets[0], style];\r\n    }\r\n    else {\r\n        // Fallback for browsers without adoptedStyleSheet API suppport\r\n        var node = el.shadowRoot || el;\r\n        style = el.querySelector('#themeStyle') || document.createElement('style');\r\n        // style.appendChild(document.createTextNode(css));\r\n        // style.innerHTML = css;\r\n        style.id = 'themeStyle';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        if (!node.querySelector('#themeStyle')) {\r\n            node.insertBefore(style, node.firstChild.nextSibling);\r\n        }\r\n    }\r\n}\r\nexport { themeStyle as t };\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/corporate-ui-dev/dist/esm-es5/shadow-css-4889ae62-23996f3f.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","safeSelector","selector","content","placeholders","index","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","_i","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","parts","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotAttr","compound","sel","convertColonHostContext","convertShadowDOMSelectors","reduce","result","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","applySimpleSelectorScope","hostSelector","lastIndex","replaceBy_1","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","res","scopedSelector","startIndex","sep","hasHost","shouldScope","exec","separator","part_1","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotScopeId","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector_1","placeholder","comment","scopedCssText","forEach","_a"],"mappings":"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","file":"js/chunk-2d21a5c2.091f3da2.js","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n *\r\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\r\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\r\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\r\n */\r\nvar safeSelector = function (selector) {\r\n    var placeholders = [];\r\n    var index = 0;\r\n    var content;\r\n    // Replaces attribute selectors with placeholders.\r\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\r\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\r\n        var replaceBy = \"__ph-\" + index + \"__\";\r\n        placeholders.push(keep);\r\n        index++;\r\n        return replaceBy;\r\n    });\r\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\r\n    // WS and \"+\" would otherwise be interpreted as selector separators.\r\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\r\n        var replaceBy = \"__ph-\" + index + \"__\";\r\n        placeholders.push(exp);\r\n        index++;\r\n        return pseudo + replaceBy;\r\n    });\r\n    var ss = {\r\n        content: content,\r\n        placeholders: placeholders,\r\n    };\r\n    return ss;\r\n};\r\nvar restoreSafeSelector = function (placeholders, content) {\r\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\r\n};\r\nvar _polyfillHost = '-shadowcsshost';\r\nvar _polyfillSlotted = '-shadowcssslotted';\r\n// note: :host-context pre-processed to -shadowcsshostcontext.\r\nvar _polyfillHostContext = '-shadowcsscontext';\r\nvar _parenSuffix = ')(?:\\\\((' +\r\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\r\n    ')\\\\))?([^,{]*)';\r\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\r\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\r\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\r\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\r\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\r\nvar _shadowDOMSelectorsRe = [\r\n    /::shadow/g,\r\n    /::content/g\r\n];\r\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\r\nvar _polyfillHostRe = /-shadowcsshost/gim;\r\nvar _colonHostRe = /:host/gim;\r\nvar _colonSlottedRe = /::slotted/gim;\r\nvar _colonHostContextRe = /:host-context/gim;\r\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\r\nvar stripComments = function (input) {\r\n    return input.replace(_commentRe, '');\r\n};\r\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\r\nvar extractCommentsWithHash = function (input) {\r\n    return input.match(_commentWithHashRe) || [];\r\n};\r\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\r\nvar _curlyRe = /([{}])/g;\r\nvar OPEN_CURLY = '{';\r\nvar CLOSE_CURLY = '}';\r\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\r\nvar processRules = function (input, ruleCallback) {\r\n    var inputWithEscapedBlocks = escapeBlocks(input);\r\n    var nextBlockIndex = 0;\r\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\r\n        var m = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            m[_i] = arguments[_i];\r\n        }\r\n        var selector = m[2];\r\n        var content = '';\r\n        var suffix = m[4];\r\n        var contentPrefix = '';\r\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\r\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\r\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\r\n            contentPrefix = '{';\r\n        }\r\n        var cssRule = {\r\n            selector: selector,\r\n            content: content\r\n        };\r\n        var rule = ruleCallback(cssRule);\r\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\r\n    });\r\n};\r\nvar escapeBlocks = function (input) {\r\n    var inputParts = input.split(_curlyRe);\r\n    var resultParts = [];\r\n    var escapedBlocks = [];\r\n    var bracketCount = 0;\r\n    var currentBlockParts = [];\r\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\r\n        var part = inputParts[partIndex];\r\n        if (part === CLOSE_CURLY) {\r\n            bracketCount--;\r\n        }\r\n        if (bracketCount > 0) {\r\n            currentBlockParts.push(part);\r\n        }\r\n        else {\r\n            if (currentBlockParts.length > 0) {\r\n                escapedBlocks.push(currentBlockParts.join(''));\r\n                resultParts.push(BLOCK_PLACEHOLDER);\r\n                currentBlockParts = [];\r\n            }\r\n            resultParts.push(part);\r\n        }\r\n        if (part === OPEN_CURLY) {\r\n            bracketCount++;\r\n        }\r\n    }\r\n    if (currentBlockParts.length > 0) {\r\n        escapedBlocks.push(currentBlockParts.join(''));\r\n        resultParts.push(BLOCK_PLACEHOLDER);\r\n    }\r\n    var strEscapedBlocks = {\r\n        escapedString: resultParts.join(''),\r\n        blocks: escapedBlocks\r\n    };\r\n    return strEscapedBlocks;\r\n};\r\nvar insertPolyfillHostInCssText = function (selector) {\r\n    selector = selector\r\n        .replace(_colonHostContextRe, _polyfillHostContext)\r\n        .replace(_colonHostRe, _polyfillHost)\r\n        .replace(_colonSlottedRe, _polyfillSlotted);\r\n    return selector;\r\n};\r\nvar convertColonRule = function (cssText, regExp, partReplacer) {\r\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\r\n    return cssText.replace(regExp, function () {\r\n        var m = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            m[_i] = arguments[_i];\r\n        }\r\n        if (m[2]) {\r\n            var parts = m[2].split(',');\r\n            var r = [];\r\n            for (var i = 0; i < parts.length; i++) {\r\n                var p = parts[i].trim();\r\n                if (!p)\r\n                    break;\r\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\r\n            }\r\n            return r.join(',');\r\n        }\r\n        else {\r\n            return _polyfillHostNoCombinator + m[3];\r\n        }\r\n    });\r\n};\r\nvar colonHostPartReplacer = function (host, part, suffix) {\r\n    return host + part.replace(_polyfillHost, '') + suffix;\r\n};\r\nvar convertColonHost = function (cssText) {\r\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\r\n};\r\nvar colonHostContextPartReplacer = function (host, part, suffix) {\r\n    if (part.indexOf(_polyfillHost) > -1) {\r\n        return colonHostPartReplacer(host, part, suffix);\r\n    }\r\n    else {\r\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\r\n    }\r\n};\r\nvar convertColonSlotted = function (cssText, slotAttr) {\r\n    var regExp = _cssColonSlottedRe;\r\n    return cssText.replace(regExp, function () {\r\n        var m = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            m[_i] = arguments[_i];\r\n        }\r\n        if (m[2]) {\r\n            var compound = m[2].trim();\r\n            var suffix = m[3];\r\n            var sel = '.' + slotAttr + ' > ' + compound + suffix;\r\n            return sel;\r\n        }\r\n        else {\r\n            return _polyfillHostNoCombinator + m[3];\r\n        }\r\n    });\r\n};\r\nvar convertColonHostContext = function (cssText) {\r\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\r\n};\r\nvar convertShadowDOMSelectors = function (cssText) {\r\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\r\n};\r\nvar makeScopeMatcher = function (scopeSelector) {\r\n    var lre = /\\[/g;\r\n    var rre = /\\]/g;\r\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\r\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\r\n};\r\nvar selectorNeedsScoping = function (selector, scopeSelector) {\r\n    var re = makeScopeMatcher(scopeSelector);\r\n    return !re.test(selector);\r\n};\r\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\r\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\r\n    _polyfillHostRe.lastIndex = 0;\r\n    if (_polyfillHostRe.test(selector)) {\r\n        var replaceBy_1 = \".\" + hostSelector;\r\n        return selector\r\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\r\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\r\n                return before + replaceBy_1 + colon + after;\r\n            });\r\n        })\r\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\r\n    }\r\n    return scopeSelector + ' ' + selector;\r\n};\r\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\r\n    var isRe = /\\[is=([^\\]]*)\\]/g;\r\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\r\n        var parts = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            parts[_i - 1] = arguments[_i];\r\n        }\r\n        return parts[0];\r\n    });\r\n    var className = '.' + scopeSelector;\r\n    var _scopeSelectorPart = function (p) {\r\n        var scopedP = p.trim();\r\n        if (!scopedP) {\r\n            return '';\r\n        }\r\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\r\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\r\n        }\r\n        else {\r\n            // remove :host since it should be unnecessary\r\n            var t = p.replace(_polyfillHostRe, '');\r\n            if (t.length > 0) {\r\n                var matches = t.match(/([^:]*)(:*)(.*)/);\r\n                if (matches) {\r\n                    scopedP = matches[1] + className + matches[2] + matches[3];\r\n                }\r\n            }\r\n        }\r\n        return scopedP;\r\n    };\r\n    var safeContent = safeSelector(selector);\r\n    selector = safeContent.content;\r\n    var scopedSelector = '';\r\n    var startIndex = 0;\r\n    var res;\r\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\r\n    // If a selector appears before :host it should not be shimmed as it\r\n    // matches on ancestor elements and not on elements in the host's shadow\r\n    // `:host-context(div)` is transformed to\r\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\r\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\r\n    // Historically `component-tag:host` was matching the component so we also want to preserve\r\n    // this behavior to avoid breaking legacy apps (it should not match).\r\n    // The behavior should be:\r\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\r\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\r\n    //   `:host-context(tag)`)\r\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\r\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\r\n    var shouldScope = !hasHost;\r\n    while ((res = sep.exec(selector)) !== null) {\r\n        var separator = res[1];\r\n        var part_1 = selector.slice(startIndex, res.index).trim();\r\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\r\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\r\n        scopedSelector += scopedPart + \" \" + separator + \" \";\r\n        startIndex = sep.lastIndex;\r\n    }\r\n    var part = selector.substring(startIndex);\r\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\r\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\r\n    // replace the placeholders with their original values\r\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\r\n};\r\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\r\n    return selector.split(',')\r\n        .map(function (shallowPart) {\r\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\r\n            return shallowPart.trim();\r\n        }\r\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\r\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\r\n        }\r\n        else {\r\n            return shallowPart.trim();\r\n        }\r\n    })\r\n        .join(', ');\r\n};\r\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\r\n    return processRules(cssText, function (rule) {\r\n        var selector = rule.selector;\r\n        var content = rule.content;\r\n        if (rule.selector[0] !== '@') {\r\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\r\n        }\r\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\r\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\r\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\r\n        }\r\n        var cssRule = {\r\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\r\n            content: content\r\n        };\r\n        return cssRule;\r\n    });\r\n};\r\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\r\n    cssText = insertPolyfillHostInCssText(cssText);\r\n    cssText = convertColonHost(cssText);\r\n    cssText = convertColonHostContext(cssText);\r\n    cssText = convertColonSlotted(cssText, slotScopeId);\r\n    cssText = convertShadowDOMSelectors(cssText);\r\n    if (scopeId) {\r\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\r\n    }\r\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\r\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\r\n    return cssText.trim();\r\n};\r\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\r\n    var hostScopeId = scopeId + '-h';\r\n    var slotScopeId = scopeId + '-s';\r\n    var commentsWithHash = extractCommentsWithHash(cssText);\r\n    cssText = stripComments(cssText);\r\n    var orgSelectors = [];\r\n    if (commentOriginalSelector) {\r\n        var processCommentedSelector_1 = function (rule) {\r\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\r\n            var comment = \"/*!@\" + rule.selector + \"*/\";\r\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\r\n            rule.selector = placeholder + rule.selector;\r\n            return rule;\r\n        };\r\n        cssText = processRules(cssText, function (rule) {\r\n            if (rule.selector[0] !== '@') {\r\n                return processCommentedSelector_1(rule);\r\n            }\r\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\r\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\r\n                rule.content = processRules(rule.content, processCommentedSelector_1);\r\n                return rule;\r\n            }\r\n            return rule;\r\n        });\r\n    }\r\n    var scopedCssText = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\r\n    cssText = __spreadArrays([scopedCssText], commentsWithHash).join('\\n');\r\n    if (commentOriginalSelector) {\r\n        orgSelectors.forEach(function (_a) {\r\n            var placeholder = _a.placeholder, comment = _a.comment;\r\n            cssText = cssText.replace(placeholder, comment);\r\n        });\r\n    }\r\n    return cssText;\r\n};\r\nexport { scopeCss };\r\n"],"sourceRoot":""}